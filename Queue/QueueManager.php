<?phpnamespace DefenderService\DamMicroService\Queue;use Illuminate\Queue\Events\JobProcessed;use Mockery\Exception;use Monolog\Logger;use Monolog\Handler\StreamHandler;class QueueManager{    static $workerTimes = 0;    static $maxTimes;    static $damQueue = false;    /**     * Execute the job.     * create by changsheng.gu@vcg.com     * @return void     */    public static function MaxWorkTimes($event)    {        if(!self::$damQueue) return;        self::$maxTimes  = config('damQueueManager.workerMaxTimes')??500;        if($event instanceof JobProcessed){            $data = json_decode($event->job->getRawBody(),true);            if(isset($data['data']['command'])){                $command = unserialize($data['data']['command']);                if (method_exists($command, 'damJobFailed')){                    $command->damJobSuccess($command);                }            }            if(self::$workerTimes >=self::$maxTimes)            {                posix_kill(posix_getpid(), SIGTERM);            }        }else{            self::$workerTimes++;        }    }}