<?phpnamespace DefenderService\DamMicroService;use Illuminate\Support\ServiceProvider;use Laravel\Lumen\Application as LumenApplication;use DefenderService\DamMicroService\Commands\ListenCommand;class DamMicroServiceProvider extends ServiceProvider{    public function boot()    {        if($this->app instanceof LumenApplication){            $this->app->configure('services');        }else            $this->publishes([                dirname(__DIR__).'/config/services.php' => config_path('services.php'), ],                'dam-services'            );    }    public function register()    {        $this->app->bind('Service', function(){            return $this->app->make('DefenderService\DamMicroService\Service');        });        if ($this->app->runningInConsole()) {            // Registering commands            $this->commands([                ListenCommand::class,            ]);        }        $this->app->configureMonologUsing(function ($monolog) {            $maxFiles = config('logger.lumen.days');            $formatter = new \Monolog\Formatter\LogstashFormatter(null, null, null, 'ctxt_',  \Monolog\Formatter\LogstashFormatter::V1);            # $LineFormatter = new \Monolog\Formatter\LineFormatter(null, null, true, true);            $rotatingLogHandler = (new \Monolog\Handler\RotatingFileHandler(config('logger.lumen.path'), $maxFiles))                ->setFormatter($formatter);            $monolog->setHandlers([$rotatingLogHandler]);            return $monolog;        });        $this->app->bind('DamLogService', function(){            return $this->app->make('App\Helper\DamLog\DamLogService');        });    }}